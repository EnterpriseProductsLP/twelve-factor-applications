@model ClientUI.Controllers.ConfigViewModel

@{
    ViewData["Title"] = "Config value from user secrets";
}

<h1>Config value from user secrets</h1>

<p>For this example to work properly, you must have:</p>
<ul>
    <li>A configuration value named ClientUI:FromUserSecret in appsettings.json.  This value will be overriden by another value in appsettings.Development.json.</li>
    <li>A different configuration value named ClientUI:FromUserSecret in appsettings.Development.json.  This value will be overriden by another value in a user secret during development only.</li>
    <li>A different configuration value in a user secret named ClientUI:FromUserSecret.  Create this by running 'dotnet user-secret set ClientUI:FromUserSecret "This value is from user secrets."'</li>
</ul>

<div class="card">
    <div class="card-header">
        <strong>Configuration Value</strong>:  @Model.Value
    </div>
</div>
